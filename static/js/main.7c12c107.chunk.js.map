{"version":3,"sources":["components/shared/Title/Title.styles.js","components/shared/Title/Title.jsx","components/shared/Title/index.js","components/shared/Container/Container.styles.js","components/shared/Container/index.js","components/shared/Container/Container.jsx","components/PhonesForm/index.js","components/PhonesForm/PhonesForm.jsx","components/ContactsList/ContactsListItem/index.js","components/ContactsList/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactsList.jsx","components/ContactsList/index.js","components/Filter/index.js","components/Filter/Filter.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["StyledTitle","styled","h2","Title","title","className","defaultProps","StyledContainer","div","Container","children","PhonesForm","state","name","number","isExist","changeHandler","target","setState","value","submitHandler","e","preventDefault","isContactExists","newRecord","makeRecord","props","onContactAdd","currName","this","contacts","some","id","uuid","onSubmit","htmlFor","onChange","type","Component","ContactsListItem","onDelete","onClick","ContactsList","onContactDelete","map","rest","Filter","onFilter","App","filter","contact","contactId","onFilterChange","JSON","parse","localStorage","getItem","setItem","stringify","visibleContacts","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c12c107.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledTitle = styled.h2`\r\n    margin: 0;\r\n    padding: 0;\r\n    font-size: 20px;\r\n    margin-bottom: 30px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledTitle } from './Title.styles';\r\n\r\nconst Title = ({title}) => (\r\n  <StyledTitle className=\"title\">\r\n    {title}\r\n  </StyledTitle>\r\n);\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nTitle.defaultProps = {\r\n  // bla: 'test',\r\n};\r\n\r\nexport default Title;\r\n","import Title from './Title';\r\n\r\nexport default Title;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledContainer = styled.div`\r\n    width: 1200px;\r\n    margin: 0 auto;\r\n`;\r\n","import Container from './Container';\r\n\r\nexport default Container;\r\n","import React from 'react';\r\n\r\nimport { StyledContainer } from './Container.styles';\r\n\r\nconst Container = ({children}) => (\r\n  <StyledContainer>\r\n    {children}\r\n  </StyledContainer>\r\n);\r\n\r\nexport default Container;\r\n","import PhonesForm from './PhonesForm';\n\nexport default PhonesForm;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {v4 as uuid} from 'uuid';\nimport './PhonesForm.styles.scss';\n\nclass PhonesForm extends Component  {\n  state = {\n    name: '',\n    number: '',\n    isExist: false\n  }\n\n  changeHandler = ({target}) => {\n    this.setState( () => {\n      return {\n        [target.name]: target.value\n      }\n    })\n  }\n\n  submitHandler = (e) => {\n    e.preventDefault();\n\n    if (this.isContactExists(this.state.name)){\n      this.setState({\n        isExist: true\n      })\n      return;\n    }\n\n    const newRecord = this.makeRecord()\n    this.setState({\n      name: '',\n      number: '',\n      isExist: false\n      })\n    this.props.onContactAdd(newRecord);\n  }\n\n  isContactExists(currName){\n    return (this.props.contacts.some( ({name}) => name === currName))\n  }\n\n  makeRecord(){\n    const id = uuid();\n    const {name, number} = this.state;\n    return {id, name, number}\n  }\n\n  render(){\n    const {name, number, isExist} = this.state\n    return (\n      <form className=\"contacts-form\" onSubmit={this.submitHandler}>\n\n        <div className=\"contacts-form__group\">\n          <label className=\"contacts-form__label\" htmlFor=\"contactName\" >Name</label>\n          <input className=\"contacts-form__input\" \n            onChange={this.changeHandler} \n            id=\"contactName\"\n            name=\"name\"\n            value={name}/>\n        </div>\n\n        <div className=\"contacts-form__group\">\n          <label className=\"contacts-form__label\" htmlFor=\"contactNumber\">Number</label>\n          <input \n            className=\"contacts-form__input\" \n            onChange={this.changeHandler} \n            id=\"contactNumber\"\n            name=\"number\"\n            value={number}/>\n        </div>\n\n        <button type=\"submit\" className=\"contacts-form__submit-btn\">Add contact</button>\n\n        {isExist && <span className=\"err-msg\">This person is already in your contacts list</span>}\n      </form>\n    )\n  }  \n};\n\nPhonesForm.propTypes = {\n  onContactAdd: PropTypes.func.isRequired,\n};\n\nexport default PhonesForm;\n","import ContactsListItem from './ContactsListItem';\n\nexport default ContactsListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ContactsListItem.scss';\n\n\nconst ContactsListItem = ({id, name, number, onDelete}) => (\n  <li className=\"contacts-list__item\">\n    <span className=\"contacts-list__item-text\">{name}: {number}</span>\n    <button type=\"button\" onClick={() => onDelete(id)} className=\"contacts-list__item-btn\">Delete</button>\n  </li>\n);\n\nContactsListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete:  PropTypes.func.isRequired\n};\n\n\nexport default ContactsListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactsListItem from './ContactsListItem';\n\n\nconst ContactsList = ({contacts, onContactDelete}) => (\n  <ul className=\"contacts-list\">\n    {contacts.map( ({id, ...rest}) => {\n      return (\n        <ContactsListItem key={id} id={id} {...rest} onDelete={onContactDelete} />\n      )\n    })}\n  </ul>\n);\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.exact({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string\n  })).isRequired,\n  onContactDelete: PropTypes.func.isRequired\n};\n\nContactsList.defaultProps = {\n  // bla: 'test',\n};\n\nexport default ContactsList;\n","import ContactsList from './ContactsList';\n\nexport default ContactsList;\n","import Filter from './Filter';\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Filter.scss';\n\nconst Filter = ({onFilter}) => (\n  <div className=\"filter\">\n    <label htmlFor=\"filterInput\" className=\"filter__label\">Find contacts by name</label>\n    <input type=\"text\" id=\"filterInput\" onChange={onFilter} className=\"filter__inpur\"/>\n  </div>\n);\n\nFilter.propTypes = {\n   onFilter: PropTypes.func.isRequired,\n};\n\n\nexport default Filter;\n","import React, {Component} from 'react';\r\n\r\nimport Title from './components/shared/Title';\r\nimport Container from './components/shared/Container';\r\nimport PhonesForm from './components/PhonesForm';\r\nimport ContactsList from './components/ContactsList';\r\nimport Filter from './components/Filter';\r\n\r\nimport './App.scss';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  }\r\n\r\n  componentDidMount(){\r\n    const contacts = JSON.parse(localStorage.getItem('contacts')) || [\r\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'}\r\n    ];\r\n    this.setState( {contacts} );\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n  }\r\n\r\n  onContactAdd = (contact) => {\r\n    this.setState( state => {\r\n      const contacts = [...state.contacts, contact]\r\n      return { contacts }\r\n    })\r\n    \r\n  }\r\n\r\n  onContactDelete = (contactId) => {\r\n    this.setState( state => {\r\n      const contacts = state.contacts.filter( ({id}) => contactId !== id )\r\n      return {\r\n        contacts\r\n      }\r\n    });\r\n  }\r\n\r\n  onFilterChange = ({target}) => {\r\n    this.setState({\r\n        filter: target.value\r\n      })\r\n  }\r\n\r\n  render(){\r\n    const {contacts, filter} = this.state\r\n    const visibleContacts = contacts.filter(({name}) => name.toLowerCase().includes(filter.toLowerCase()) )\r\n    return (\r\n      <Container className=\"container phonebook\">\r\n        <Title title=\"Phonebook\"/>\r\n        <PhonesForm onContactAdd={this.onContactAdd} contacts={contacts}/>\r\n        <Title title=\"Contacts\" />\r\n        <Filter onFilter={this.onFilterChange}/>\r\n        <ContactsList onContactDelete={this.onContactDelete} contacts={visibleContacts}/>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}